package me.fluffycq.icehack.module.modules.exploit;

import me.fluffycq.icehack.message.Messages;
import me.fluffycq.icehack.module.Category;
import me.fluffycq.icehack.module.Module;
import net.minecraft.item.ItemBow;
import net.minecraft.item.ItemShulkerBox;
import net.minecraft.item.ItemStack;
import net.minecraft.network.play.client.CPacketHeldItemChange;
import net.minecraft.network.play.client.CPacketPlayerDigging;
import net.minecraft.network.play.client.CPacketPlayerTryUseItem;
import net.minecraft.network.play.client.CPacketPlayerDigging.Action;
import net.minecraft.util.math.BlockPos;

public class AutoKickBow extends Module {

    public AutoKickBow() {
        super("AutoKickBow", 0, Category.EXPLOITS);
    }

    public void onUpdate() {
        if (AutoKickBow.mc.player.inventory.getCurrentItem().getItem() instanceof ItemBow && AutoKickBow.mc.player.isHandActive() && AutoKickBow.mc.player.getItemInUseMaxCount() >= 25) {
            AutoKickBow.mc.player.connection.sendPacket(new CPacketPlayerDigging(Action.RELEASE_USE_ITEM, BlockPos.ORIGIN, AutoKickBow.mc.player.getHorizontalFacing()));
            AutoKickBow.mc.player.connection.sendPacket(new CPacketPlayerTryUseItem(AutoKickBow.mc.player.getActiveHand()));
            AutoKickBow.mc.player.stopActiveHand();
            if (this.findShulker() != -1) {
                this.changeItem(this.findShulker());
            } else {
                Messages.sendChatMessage("No shulker found in hotbar, not switching...");
                this.disable();
            }
        }

    }

    public void changeItem(int slot) {
        AutoKickBow.mc.player.connection.sendPacket(new CPacketHeldItemChange(slot));
        AutoKickBow.mc.player.inventory.currentItem = slot;
    }

    public int findShulker() {
        int slot = -1;

        for (int i = 0; i < 9; ++i) {
            ItemStack item = (ItemStack) AutoKickBow.mc.player.inventory.mainInventory.get(i);

            if (item.getItem() instanceof ItemShulkerBox) {
                slot = i;
            }
        }

        return slot;
    }
}
